package com.google.gwt.query.client.css;

import com.google.gwt.core.client.GWT;
import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.dom.client.Style;

/**
 * The 'visibility' property specifies whether the boxes generated by an element
 * are rendered. Invisible boxes still affect layout (set the 'display' property
 * to 'none' to suppress box generation altogether). Values have the following
 * meanings:
 */
public class Visibility implements CssProperty<Visibility.VisibilityValue> {

  public static void init() {
    CSS.VISIBILITY = new Visibility();
    CSS.VISIBLE = VisibilityValue.create("visible");
    CSS.HIDDEN = VisibilityValue.create("hidden");
    CSS.COLLAPSE = VisibilityValue.create("collapse");
  }

  public void set(Style s, VisibilityValue value) {
    s.setProperty("visibility", value.value());
  }

  public String get(Style s) {
    return s.getProperty("visibilityat");
  }

  final static public class VisibilityValue extends JavaScriptObject {

    protected VisibilityValue() {
    }

    protected static VisibilityValue create(String val) {
      return GWT.isScript() ? createWeb(val) : createHosted(val);
    }

    public String value() {
      return GWT.isScript() ? valueWeb() : valueHosted();
    }

    private static native VisibilityValue createWeb(String val) /*-{
      return val;
    }-*/;

    private static native VisibilityValue createHosted(String val) /*-{
      return [val];
    }-*/;

    private native String valueWeb() /*-{
       return this;
    }-*/;

    private native String valueHosted() /*-{
       return this[0];
    }-*/;
  }
}